# Makefile.in generated by automake 1.11.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# GLIB - Library of useful C routines

VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.decl testasync.c testasync_vala.stamp \
	testasyncworker.c testasyncworker_vala.stamp testbinbuilder.c \
	testbinbuilder_vala.stamp testbinreader.c \
	testbinreader_vala.stamp testinotifier.c \
	testinotifier_vala.stamp testlogger.c testlogger_vala.stamp \
	testnetlink.c testnetlink_vala.stamp testnetlinknotifier.c \
	testnetlinknotifier_vala.stamp testoverlay.c \
	testoverlay_vala.stamp testsmartkeyfile.c \
	testsmartkeyfile_vala.stamp testthreading.c \
	testthreading_vala.stamp testutilities.c \
	testutilities_vala.stamp
@WANT_DEBUG_TRUE@am__append_1 = --debug -D DEBUG
@WANT_DEBUG_TRUE@am__append_2 = -ggdb -O0
noinst_PROGRAMS = $(am__EXEEXT_2)
subdir = tests/fsobasics
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 =
am__EXEEXT_2 = testasync$(EXEEXT) testasyncworker$(EXEEXT) \
	testinotifier$(EXEEXT) testnetlinknotifier$(EXEEXT) \
	testsmartkeyfile$(EXEEXT) testlogger$(EXEEXT) \
	testutilities$(EXEEXT) testnetlink$(EXEEXT) \
	testoverlay$(EXEEXT) testthreading$(EXEEXT) \
	testbinreader$(EXEEXT) testbinbuilder$(EXEEXT) $(am__EXEEXT_1)
PROGRAMS = $(noinst_PROGRAMS)
am_testasync_OBJECTS = testasync.$(OBJEXT)
testasync_OBJECTS = $(am_testasync_OBJECTS)
testasync_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
testasync_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(top_builddir)/fsobasics/libfsobasics.la \
	$(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am_testasyncworker_OBJECTS = testasyncworker.$(OBJEXT)
testasyncworker_OBJECTS = $(am_testasyncworker_OBJECTS)
testasyncworker_LDADD = $(LDADD)
testasyncworker_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(top_builddir)/fsobasics/libfsobasics.la \
	$(am__DEPENDENCIES_1)
am_testbinbuilder_OBJECTS = testbinbuilder.$(OBJEXT)
testbinbuilder_OBJECTS = $(am_testbinbuilder_OBJECTS)
testbinbuilder_LDADD = $(LDADD)
testbinbuilder_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(top_builddir)/fsobasics/libfsobasics.la \
	$(am__DEPENDENCIES_1)
am_testbinreader_OBJECTS = testbinreader.$(OBJEXT)
testbinreader_OBJECTS = $(am_testbinreader_OBJECTS)
testbinreader_LDADD = $(LDADD)
testbinreader_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(top_builddir)/fsobasics/libfsobasics.la \
	$(am__DEPENDENCIES_1)
am_testinotifier_OBJECTS = testinotifier.$(OBJEXT)
testinotifier_OBJECTS = $(am_testinotifier_OBJECTS)
testinotifier_LDADD = $(LDADD)
testinotifier_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(top_builddir)/fsobasics/libfsobasics.la \
	$(am__DEPENDENCIES_1)
am_testlogger_OBJECTS = testlogger.$(OBJEXT)
testlogger_OBJECTS = $(am_testlogger_OBJECTS)
testlogger_LDADD = $(LDADD)
testlogger_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(top_builddir)/fsobasics/libfsobasics.la \
	$(am__DEPENDENCIES_1)
am_testnetlink_OBJECTS = testnetlink.$(OBJEXT)
testnetlink_OBJECTS = $(am_testnetlink_OBJECTS)
testnetlink_LDADD = $(LDADD)
testnetlink_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(top_builddir)/fsobasics/libfsobasics.la \
	$(am__DEPENDENCIES_1)
am_testnetlinknotifier_OBJECTS = testnetlinknotifier.$(OBJEXT)
testnetlinknotifier_OBJECTS = $(am_testnetlinknotifier_OBJECTS)
testnetlinknotifier_LDADD = $(LDADD)
testnetlinknotifier_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(top_builddir)/fsobasics/libfsobasics.la \
	$(am__DEPENDENCIES_1)
am_testoverlay_OBJECTS = testoverlay.$(OBJEXT)
testoverlay_OBJECTS = $(am_testoverlay_OBJECTS)
testoverlay_LDADD = $(LDADD)
testoverlay_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(top_builddir)/fsobasics/libfsobasics.la \
	$(am__DEPENDENCIES_1)
am_testsmartkeyfile_OBJECTS = testsmartkeyfile.$(OBJEXT)
testsmartkeyfile_OBJECTS = $(am_testsmartkeyfile_OBJECTS)
testsmartkeyfile_LDADD = $(LDADD)
testsmartkeyfile_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(top_builddir)/fsobasics/libfsobasics.la \
	$(am__DEPENDENCIES_1)
am_testthreading_OBJECTS = testthreading.$(OBJEXT)
testthreading_OBJECTS = $(am_testthreading_OBJECTS)
testthreading_LDADD = $(LDADD)
testthreading_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(top_builddir)/fsobasics/libfsobasics.la \
	$(am__DEPENDENCIES_1)
am_testutilities_OBJECTS = testutilities.$(OBJEXT)
testutilities_OBJECTS = $(am_testutilities_OBJECTS)
testutilities_LDADD = $(LDADD)
testutilities_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(top_builddir)/fsobasics/libfsobasics.la \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD  " $@;
VALACOMPILE = $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS)
LTVALACOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(VALAC) $(AM_VALAFLAGS) \
	$(VALAFLAGS)
AM_V_VALAC = $(am__v_VALAC_@AM_V@)
am__v_VALAC_ = $(am__v_VALAC_@AM_DEFAULT_V@)
am__v_VALAC_0 = @echo "  VALAC " $@;
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(testasync_SOURCES) $(testasyncworker_SOURCES) \
	$(testbinbuilder_SOURCES) $(testbinreader_SOURCES) \
	$(testinotifier_SOURCES) $(testlogger_SOURCES) \
	$(testnetlink_SOURCES) $(testnetlinknotifier_SOURCES) \
	$(testoverlay_SOURCES) $(testsmartkeyfile_SOURCES) \
	$(testthreading_SOURCES) $(testutilities_SOURCES)
DIST_SOURCES = $(testasync_SOURCES) $(testasyncworker_SOURCES) \
	$(testbinbuilder_SOURCES) $(testbinreader_SOURCES) \
	$(testinotifier_SOURCES) $(testlogger_SOURCES) \
	$(testnetlink_SOURCES) $(testnetlinknotifier_SOURCES) \
	$(testoverlay_SOURCES) $(testsmartkeyfile_SOURCES) \
	$(testthreading_SOURCES) $(testutilities_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FSO_GLIB_CFLAGS = @FSO_GLIB_CFLAGS@
FSO_GLIB_LIBS = @FSO_GLIB_LIBS@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GREP = @GREP@
GSM0710_CFLAGS = @GSM0710_CFLAGS@
GSM0710_LIBS = @GSM0710_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBNL_CFLAGS = @LIBNL_CFLAGS@
LIBNL_LIBS = @LIBNL_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_AGE = @LT_AGE@
LT_CURRENT = @LT_CURRENT@
LT_REVISION = @LT_REVISION@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VALAC = @VALAC@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
GTESTER = gtester
GTESTER_REPORT = gtester-report

# initialize variables for unconditional += appending
EXTRA_DIST = .testlogger.ini testsmartkeyfile.ini frameworkd.conf \
	textfile.txt $(NULL) $(MAINTAINERCLEANFILES) $(NULL)
TEST_PROGS = testasync testasyncworker testinotifier \
	testnetlinknotifier testsmartkeyfile testlogger testutilities \
	testnetlink testoverlay testthreading testbinreader \
	testbinbuilder $(NULL)

# debug flags for vala and gcc
DEBUG_VALAFLAGS = $(am__append_1)
DEBUG_CFLAGS = $(am__append_2)
NULL = 
AM_CFLAGS = \
	-I$(top_srcdir) \
	-I$(top_srcdir)/fsobasics \
	$(GLIB_CFLAGS) \
	$(LIBNL_CFLAGS) \
	$(NULL)

LDADD = \
	$(GLIB_LIBS) \
	$(LIBNL_LIBS) \
	$(top_builddir)/fsobasics/libfsobasics.la \
	$(NULL)

AM_VALAFLAGS = \
	-C \
	--thread \
	--basedir $(top_srcdir) \
	--vapidir $(top_srcdir)/fsobasics \
	--vapidir $(top_srcdir)/vapi \
	--pkg posix \
	--pkg linux \
	--pkg libnl-3.0 \
	--pkg glib-2.0 \
	--pkg gio-2.0 \
	--pkg fsobasics-2.0

testasync_SOURCES = testasync.vala
testasyncworker_SOURCES = testasyncworker.vala
testinotifier_SOURCES = testinotifier.vala

# testkobjectnotifier_SOURCES = testkobjectnotifier.vala
testnetlinknotifier_SOURCES = testnetlinknotifier.vala
testsmartkeyfile_SOURCES = testsmartkeyfile.vala
testlogger_SOURCES = testlogger.vala
testutilities_SOURCES = testutilities.vala
testnetlink_SOURCES = testnetlink.vala
testoverlay_SOURCES = testoverlay.vala
testthreading_SOURCES = testthreading.vala
testbinbuilder_SOURCES = testbinbuilder.vala
testbinreader_SOURCES = testbinreader.vala
CLEANFILES = \
    $(TEST_PROGS) \
    $(NULL)

MAINTAINERCLEANFILES = \
	$(addsuffix .c,$(noinst_PROGRAMS)) \
	testasync_vala.stamp \
	testasyncworker_vala.stamp \
	testinotifier_vala.stamp \
	testnetlinknotifier_vala.stamp \
	testsmartkeyfile_vala.stamp \
	testlogger_vala.stamp \
	testutilities_vala.stamp \
	testnetlink_vala.stamp \
	testoverlay_vala.stamp \
	testthreading_vala.stamp \
	testbinreader_vala.stamp \
	testbinbuilder_vala.stamp \
	$(NULL)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/Makefile.decl $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/fsobasics/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/fsobasics/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.decl:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
testasync$(EXEEXT): $(testasync_OBJECTS) $(testasync_DEPENDENCIES) $(EXTRA_testasync_DEPENDENCIES) 
	@rm -f testasync$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testasync_OBJECTS) $(testasync_LDADD) $(LIBS)
testasyncworker$(EXEEXT): $(testasyncworker_OBJECTS) $(testasyncworker_DEPENDENCIES) $(EXTRA_testasyncworker_DEPENDENCIES) 
	@rm -f testasyncworker$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testasyncworker_OBJECTS) $(testasyncworker_LDADD) $(LIBS)
testbinbuilder$(EXEEXT): $(testbinbuilder_OBJECTS) $(testbinbuilder_DEPENDENCIES) $(EXTRA_testbinbuilder_DEPENDENCIES) 
	@rm -f testbinbuilder$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testbinbuilder_OBJECTS) $(testbinbuilder_LDADD) $(LIBS)
testbinreader$(EXEEXT): $(testbinreader_OBJECTS) $(testbinreader_DEPENDENCIES) $(EXTRA_testbinreader_DEPENDENCIES) 
	@rm -f testbinreader$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testbinreader_OBJECTS) $(testbinreader_LDADD) $(LIBS)
testinotifier$(EXEEXT): $(testinotifier_OBJECTS) $(testinotifier_DEPENDENCIES) $(EXTRA_testinotifier_DEPENDENCIES) 
	@rm -f testinotifier$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testinotifier_OBJECTS) $(testinotifier_LDADD) $(LIBS)
testlogger$(EXEEXT): $(testlogger_OBJECTS) $(testlogger_DEPENDENCIES) $(EXTRA_testlogger_DEPENDENCIES) 
	@rm -f testlogger$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testlogger_OBJECTS) $(testlogger_LDADD) $(LIBS)
testnetlink$(EXEEXT): $(testnetlink_OBJECTS) $(testnetlink_DEPENDENCIES) $(EXTRA_testnetlink_DEPENDENCIES) 
	@rm -f testnetlink$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testnetlink_OBJECTS) $(testnetlink_LDADD) $(LIBS)
testnetlinknotifier$(EXEEXT): $(testnetlinknotifier_OBJECTS) $(testnetlinknotifier_DEPENDENCIES) $(EXTRA_testnetlinknotifier_DEPENDENCIES) 
	@rm -f testnetlinknotifier$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testnetlinknotifier_OBJECTS) $(testnetlinknotifier_LDADD) $(LIBS)
testoverlay$(EXEEXT): $(testoverlay_OBJECTS) $(testoverlay_DEPENDENCIES) $(EXTRA_testoverlay_DEPENDENCIES) 
	@rm -f testoverlay$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testoverlay_OBJECTS) $(testoverlay_LDADD) $(LIBS)
testsmartkeyfile$(EXEEXT): $(testsmartkeyfile_OBJECTS) $(testsmartkeyfile_DEPENDENCIES) $(EXTRA_testsmartkeyfile_DEPENDENCIES) 
	@rm -f testsmartkeyfile$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testsmartkeyfile_OBJECTS) $(testsmartkeyfile_LDADD) $(LIBS)
testthreading$(EXEEXT): $(testthreading_OBJECTS) $(testthreading_DEPENDENCIES) $(EXTRA_testthreading_DEPENDENCIES) 
	@rm -f testthreading$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testthreading_OBJECTS) $(testthreading_LDADD) $(LIBS)
testutilities$(EXEEXT): $(testutilities_OBJECTS) $(testutilities_DEPENDENCIES) $(EXTRA_testutilities_DEPENDENCIES) 
	@rm -f testutilities$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testutilities_OBJECTS) $(testutilities_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testasync.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testasyncworker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testbinbuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testbinreader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testinotifier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testlogger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testnetlink.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testnetlinknotifier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testoverlay.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testsmartkeyfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testthreading.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testutilities.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<
$(srcdir)/testoverlay.c: $(srcdir)/testoverlay_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/testoverlay_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/testoverlay_vala.stamp; \
	fi
$(srcdir)/testoverlay_vala.stamp: testoverlay.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS) -C testoverlay.vala
	$(AM_V_at)mv -f $@-t $@
$(srcdir)/testinotifier.c: $(srcdir)/testinotifier_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/testinotifier_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/testinotifier_vala.stamp; \
	fi
$(srcdir)/testinotifier_vala.stamp: testinotifier.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS) -C testinotifier.vala
	$(AM_V_at)mv -f $@-t $@
$(srcdir)/testasync.c: $(srcdir)/testasync_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/testasync_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/testasync_vala.stamp; \
	fi
$(srcdir)/testasync_vala.stamp: testasync.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS) -C testasync.vala
	$(AM_V_at)mv -f $@-t $@
$(srcdir)/testnetlinknotifier.c: $(srcdir)/testnetlinknotifier_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/testnetlinknotifier_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/testnetlinknotifier_vala.stamp; \
	fi
$(srcdir)/testnetlinknotifier_vala.stamp: testnetlinknotifier.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS) -C testnetlinknotifier.vala
	$(AM_V_at)mv -f $@-t $@
$(srcdir)/testutilities.c: $(srcdir)/testutilities_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/testutilities_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/testutilities_vala.stamp; \
	fi
$(srcdir)/testutilities_vala.stamp: testutilities.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS) -C testutilities.vala
	$(AM_V_at)mv -f $@-t $@
$(srcdir)/testbinreader.c: $(srcdir)/testbinreader_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/testbinreader_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/testbinreader_vala.stamp; \
	fi
$(srcdir)/testbinreader_vala.stamp: testbinreader.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS) -C testbinreader.vala
	$(AM_V_at)mv -f $@-t $@
$(srcdir)/testnetlink.c: $(srcdir)/testnetlink_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/testnetlink_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/testnetlink_vala.stamp; \
	fi
$(srcdir)/testnetlink_vala.stamp: testnetlink.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS) -C testnetlink.vala
	$(AM_V_at)mv -f $@-t $@
$(srcdir)/testbinbuilder.c: $(srcdir)/testbinbuilder_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/testbinbuilder_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/testbinbuilder_vala.stamp; \
	fi
$(srcdir)/testbinbuilder_vala.stamp: testbinbuilder.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS) -C testbinbuilder.vala
	$(AM_V_at)mv -f $@-t $@
$(srcdir)/testthreading.c: $(srcdir)/testthreading_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/testthreading_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/testthreading_vala.stamp; \
	fi
$(srcdir)/testthreading_vala.stamp: testthreading.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS) -C testthreading.vala
	$(AM_V_at)mv -f $@-t $@
$(srcdir)/testasyncworker.c: $(srcdir)/testasyncworker_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/testasyncworker_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/testasyncworker_vala.stamp; \
	fi
$(srcdir)/testasyncworker_vala.stamp: testasyncworker.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS) -C testasyncworker.vala
	$(AM_V_at)mv -f $@-t $@
$(srcdir)/testlogger.c: $(srcdir)/testlogger_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/testlogger_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/testlogger_vala.stamp; \
	fi
$(srcdir)/testlogger_vala.stamp: testlogger.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS) -C testlogger.vala
	$(AM_V_at)mv -f $@-t $@
$(srcdir)/testsmartkeyfile.c: $(srcdir)/testsmartkeyfile_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/testsmartkeyfile_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/testsmartkeyfile_vala.stamp; \
	fi
$(srcdir)/testsmartkeyfile_vala.stamp: testsmartkeyfile.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS) -C testsmartkeyfile.vala
	$(AM_V_at)mv -f $@-t $@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f testasync.c
	-rm -f testasync_vala.stamp
	-rm -f testasyncworker.c
	-rm -f testasyncworker_vala.stamp
	-rm -f testbinbuilder.c
	-rm -f testbinbuilder_vala.stamp
	-rm -f testbinreader.c
	-rm -f testbinreader_vala.stamp
	-rm -f testinotifier.c
	-rm -f testinotifier_vala.stamp
	-rm -f testlogger.c
	-rm -f testlogger_vala.stamp
	-rm -f testnetlink.c
	-rm -f testnetlink_vala.stamp
	-rm -f testnetlinknotifier.c
	-rm -f testnetlinknotifier_vala.stamp
	-rm -f testoverlay.c
	-rm -f testoverlay_vala.stamp
	-rm -f testsmartkeyfile.c
	-rm -f testsmartkeyfile_vala.stamp
	-rm -f testthreading.c
	-rm -f testthreading_vala.stamp
	-rm -f testutilities.c
	-rm -f testutilities_vala.stamp
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am check-local clean \
	clean-generic clean-libtool clean-noinstPROGRAMS ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


### testing rules

# test: run all tests in cwd and subdirs
test:	${TEST_PROGS}
	@test -z "${TEST_PROGS}" || ${GTESTER} --verbose ${TEST_PROGS}
	@ for subdir in $(SUBDIRS) . ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done
# test-report: run tests in subdirs and generate report
# perf-report: run tests in subdirs with -m perf and generate report
# full-report: like test-report: with -m perf and -m slow
test-report perf-report full-report:	${TEST_PROGS}
	@test -z "${TEST_PROGS}" || { \
	  case $@ in \
	  test-report) test_options="-k";; \
	  perf-report) test_options="-k -m=perf";; \
	  full-report) test_options="-k -m=perf -m=slow";; \
	  esac ; \
	  if test -z "$$GTESTER_LOGDIR" ; then	\
	    ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \
	  elif test -n "${TEST_PROGS}" ; then \
	    ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \
	  fi ; \
	}
	@ ignore_logdir=true ; \
	  if test -z "$$GTESTER_LOGDIR" ; then \
	    GTESTER_LOGDIR=`mktemp -d "\`pwd\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \
	    ignore_logdir=false ; \
	  fi ; \
	  for subdir in $(SUBDIRS) . ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done ; \
	  $$ignore_logdir || { \
	    echo '<?xml version="1.0"?>' > $@.xml ; \
	    echo '<report-collection>'  >> $@.xml ; \
	    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \
	      sed '1,1s/^<?xml\b[^>?]*?>//' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \
	    done ; \
	    echo >> $@.xml ; \
	    echo '</report-collection>' >> $@.xml ; \
	    rm -rf "$$GTESTER_LOGDIR"/ ; \
	    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \
	  }
.PHONY: test test-report perf-report full-report
# run make test as part of make check
check-local: test
	$(NULL)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
