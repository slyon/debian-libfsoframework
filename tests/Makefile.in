# Makefile.in generated by automake 1.10.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# GLIB - Library of useful C routines


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.decl
noinst_PROGRAMS = $(am__EXEEXT_1)
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(modalibexecdir)" \
	"$(DESTDIR)$(modblibexecdir)" "$(DESTDIR)$(modclibexecdir)" \
	"$(DESTDIR)$(modlibexecdir)"
modalibexecLTLIBRARIES_INSTALL = $(INSTALL)
modblibexecLTLIBRARIES_INSTALL = $(INSTALL)
modclibexecLTLIBRARIES_INSTALL = $(INSTALL)
modlibexecLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(modalibexec_LTLIBRARIES) $(modblibexec_LTLIBRARIES) \
	$(modclibexec_LTLIBRARIES) $(modlibexec_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../fsoframework/libfsoframework.la
plugin_la_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_plugin_la_OBJECTS = plugin_la-plugin.lo
plugin_la_OBJECTS = $(am_plugin_la_OBJECTS)
plugin_la_LINK = $(LIBTOOL) --tag=CC $(plugin_la_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(plugin_la_LDFLAGS) $(LDFLAGS) -o $@
plugina_la_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_plugina_la_OBJECTS = plugina_la-plugina.lo
plugina_la_OBJECTS = $(am_plugina_la_OBJECTS)
plugina_la_LINK = $(LIBTOOL) --tag=CC $(plugina_la_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(plugina_la_LDFLAGS) $(LDFLAGS) -o $@
pluginb_la_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_pluginb_la_OBJECTS = pluginb_la-pluginb.lo
pluginb_la_OBJECTS = $(am_pluginb_la_OBJECTS)
pluginb_la_LINK = $(LIBTOOL) --tag=CC $(pluginb_la_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(pluginb_la_LDFLAGS) $(LDFLAGS) -o $@
pluginc_la_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_pluginc_la_OBJECTS = pluginc_la-pluginc.lo
pluginc_la_OBJECTS = $(am_pluginc_la_OBJECTS)
pluginc_la_LINK = $(LIBTOOL) --tag=CC $(pluginc_la_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(pluginc_la_LDFLAGS) $(LDFLAGS) -o $@
am__EXEEXT_1 = testcommon$(EXEEXT) testplugin$(EXEEXT) \
	testsubsystem$(EXEEXT) testobject$(EXEEXT) \
	testasyncworker$(EXEEXT) testkobjectnotifier$(EXEEXT) \
	testsoundsystem$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_testasyncworker_OBJECTS = testasyncworker.$(OBJEXT)
testasyncworker_OBJECTS = $(am_testasyncworker_OBJECTS)
testasyncworker_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_testcommon_OBJECTS = testcommon.$(OBJEXT)
testcommon_OBJECTS = $(am_testcommon_OBJECTS)
testcommon_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_testkobjectnotifier_OBJECTS = testkobjectnotifier.$(OBJEXT)
testkobjectnotifier_OBJECTS = $(am_testkobjectnotifier_OBJECTS)
testkobjectnotifier_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_testobject_OBJECTS = testobject.$(OBJEXT)
testobject_OBJECTS = $(am_testobject_OBJECTS)
testobject_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_testplugin_OBJECTS = testplugin.$(OBJEXT)
testplugin_OBJECTS = $(am_testplugin_OBJECTS)
testplugin_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_testsoundsystem_OBJECTS = testsoundsystem.$(OBJEXT)
testsoundsystem_OBJECTS = $(am_testsoundsystem_OBJECTS)
testsoundsystem_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_testsubsystem_OBJECTS = testsubsystem.$(OBJEXT)
testsubsystem_OBJECTS = $(am_testsubsystem_OBJECTS)
testsubsystem_DEPENDENCIES = $(am__DEPENDENCIES_2)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(plugin_la_SOURCES) $(plugina_la_SOURCES) \
	$(pluginb_la_SOURCES) $(pluginc_la_SOURCES) \
	$(testasyncworker_SOURCES) $(testcommon_SOURCES) \
	$(testkobjectnotifier_SOURCES) $(testobject_SOURCES) \
	$(testplugin_SOURCES) $(testsoundsystem_SOURCES) \
	$(testsubsystem_SOURCES)
DIST_SOURCES = $(plugin_la_SOURCES) $(plugina_la_SOURCES) \
	$(pluginb_la_SOURCES) $(pluginc_la_SOURCES) \
	$(testasyncworker_SOURCES) $(testcommon_SOURCES) \
	$(testkobjectnotifier_SOURCES) $(testobject_SOURCES) \
	$(testplugin_SOURCES) $(testsoundsystem_SOURCES) \
	$(testsubsystem_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALSA_CFLAGS = @ALSA_CFLAGS@
ALSA_LIBS = @ALSA_LIBS@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DBUS_CFLAGS = @DBUS_CFLAGS@
DBUS_LIBS = @DBUS_LIBS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FSOBASICS_CFLAGS = @FSOBASICS_CFLAGS@
FSOBASICS_LIBS = @FSOBASICS_LIBS@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VALAC = @VALAC@
VALA_CFLAGS = @VALA_CFLAGS@
VALA_LIBS = @VALA_LIBS@
VALA_VAPIDIR = @VALA_VAPIDIR@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
GTESTER = gtester 
GTESTER_REPORT = gtester-report

# initialize variables for unconditional += appending
EXTRA_DIST = $(testcommon_VALASOURCES) $(testplugin_VALASOURCES) \
	$(testsubsystem_VALASOURCES) $(testobject_VALASOURCES) \
	$(testasyncworker_VALASOURCES) \
	$(testkobjectnotifier_VALASOURCES) \
	$(testsoundsystem_VALASOURCES)

#
# common test
#

#
# plugin test
#

#
# subsystem test
#

#
# object test
#

#
# asyncworker test
#

#
# kobjectnotifier test
#

#
# soundsystem test
#
TEST_PROGS = testcommon testplugin testsubsystem testobject \
	testasyncworker testkobjectnotifier testsoundsystem
NULL = 
AM_CPPFLAGS = \
	-I$(top_srcdir) \
	-I../fsoframework \
	$(GLIB_CFLAGS) \
	$(DBUS_CFLAGS) \
	$(ALSA_CFLAGS) \
	$(FSOBASICS_CFLAGS) \
	$(NULL)

INCLUDES = \
	-I../fsoframework

progs_ldadd = \
	$(GLIB_LIBS) \
	$(DBUS_LIBS) \
	$(ALSA_LIBS) \
	$(FSOBASICS_LIBS) \
	../fsoframework/libfsoframework.la

VALAC_ARGS = \
	-C \
	--basedir $(top_srcdir) \
	--vapidir $(top_srcdir)/fsoframework \
	--pkg posix \
	--pkg glib-2.0 \
	--pkg gio-2.0 \
	--pkg dbus-glib-1 \
	--pkg fsoframework-2.0

testcommon_VALASOURCES = testcommon.vala
testcommon_SOURCES = testcommon.c
testcommon_LDADD = $(progs_ldadd)

#
# plugin for the plugin test
#
modlibexecdir = $(libdir)/cornucopia/modules/tests
modlibexec_LTLIBRARIES = plugin.la
plugin_la_SOURCES = plugin.c
plugin_la_VALASOURCES = plugin.vala
plugin_la_LIBADD = $(progs_ldadd)
plugin_la_LDFLAGS = -no-undefined -module -avoid-version
plugin_la_LIBTOOLFLAGS = --tag=disable-static

#
# plugin a for the subsystem test
#
modalibexecdir = $(libdir)/cornucopia/modules/tests
modalibexec_LTLIBRARIES = plugina.la
plugina_la_SOURCES = plugina.c
plugina_la_VALASOURCES = plugina.vala
plugina_la_LIBADD = $(progs_ldadd)
plugina_la_LDFLAGS = -no-undefined -module -avoid-version
plugina_la_LIBTOOLFLAGS = --tag=disable-static

#
# plugin b for the subsystem test
#
modblibexecdir = $(libdir)/cornucopia/modules/tests
modblibexec_LTLIBRARIES = pluginb.la
pluginb_la_SOURCES = pluginb.c
pluginb_la_VALASOURCES = pluginb.vala
pluginb_la_LIBADD = $(progs_ldadd)
pluginb_la_LDFLAGS = -no-undefined -module -avoid-version
pluginb_la_LIBTOOLFLAGS = --tag=disable-static

#
# plugin c for the subsystem test
#
modclibexecdir = $(libdir)/cornucopia/modules/tests
modclibexec_LTLIBRARIES = pluginc.la
pluginc_la_SOURCES = pluginc.c
pluginc_la_VALASOURCES = pluginc.vala
pluginc_la_LIBADD = $(progs_ldadd)
pluginc_la_LDFLAGS = -no-undefined -module -avoid-version
pluginc_la_LIBTOOLFLAGS = --tag=disable-static
testplugin_VALASOURCES = testplugin.vala
testplugin_SOURCES = testplugin.c
testplugin_LDADD = $(progs_ldadd)
testsubsystem_VALASOURCES = testsubsystem.vala
testsubsystem_SOURCES = testsubsystem.c
testsubsystem_LDADD = $(progs_ldadd)
testobject_VALASOURCES = testobject.vala
testobject_SOURCES = testobject.c
testobject_LDADD = $(progs_ldadd)
testasyncworker_VALASOURCES = testasyncworker.vala
testasyncworker_SOURCES = testasyncworker.c
testasyncworker_LDADD = $(progs_ldadd)
testkobjectnotifier_VALASOURCES = testkobjectnotifier.vala
testkobjectnotifier_SOURCES = testkobjectnotifier.c
testkobjectnotifier_LDADD = $(progs_ldadd)
testsoundsystem_VALASOURCES = testsoundsystem.vala
testsoundsystem_SOURCES = testsoundsystem.c
testsoundsystem_LDADD = $(progs_ldadd)
CLEANFILES = \
    $(TEST_PROGS) \
    *.? \
    $(NULL)

MAINTAINERCLEANFILES = \
  Makefile.in \
  *.la \
  *.lo \
  $(NULL)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.decl $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  tests/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-modalibexecLTLIBRARIES: $(modalibexec_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(modalibexecdir)" || $(MKDIR_P) "$(DESTDIR)$(modalibexecdir)"
	@list='$(modalibexec_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(modalibexecLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(modalibexecdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(modalibexecLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(modalibexecdir)/$$f"; \
	  else :; fi; \
	done

uninstall-modalibexecLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(modalibexec_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(modalibexecdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(modalibexecdir)/$$p"; \
	done

clean-modalibexecLTLIBRARIES:
	-test -z "$(modalibexec_LTLIBRARIES)" || rm -f $(modalibexec_LTLIBRARIES)
	@list='$(modalibexec_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-modblibexecLTLIBRARIES: $(modblibexec_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(modblibexecdir)" || $(MKDIR_P) "$(DESTDIR)$(modblibexecdir)"
	@list='$(modblibexec_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(modblibexecLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(modblibexecdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(modblibexecLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(modblibexecdir)/$$f"; \
	  else :; fi; \
	done

uninstall-modblibexecLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(modblibexec_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(modblibexecdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(modblibexecdir)/$$p"; \
	done

clean-modblibexecLTLIBRARIES:
	-test -z "$(modblibexec_LTLIBRARIES)" || rm -f $(modblibexec_LTLIBRARIES)
	@list='$(modblibexec_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-modclibexecLTLIBRARIES: $(modclibexec_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(modclibexecdir)" || $(MKDIR_P) "$(DESTDIR)$(modclibexecdir)"
	@list='$(modclibexec_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(modclibexecLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(modclibexecdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(modclibexecLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(modclibexecdir)/$$f"; \
	  else :; fi; \
	done

uninstall-modclibexecLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(modclibexec_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(modclibexecdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(modclibexecdir)/$$p"; \
	done

clean-modclibexecLTLIBRARIES:
	-test -z "$(modclibexec_LTLIBRARIES)" || rm -f $(modclibexec_LTLIBRARIES)
	@list='$(modclibexec_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-modlibexecLTLIBRARIES: $(modlibexec_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(modlibexecdir)" || $(MKDIR_P) "$(DESTDIR)$(modlibexecdir)"
	@list='$(modlibexec_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(modlibexecLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(modlibexecdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(modlibexecLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(modlibexecdir)/$$f"; \
	  else :; fi; \
	done

uninstall-modlibexecLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(modlibexec_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(modlibexecdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(modlibexecdir)/$$p"; \
	done

clean-modlibexecLTLIBRARIES:
	-test -z "$(modlibexec_LTLIBRARIES)" || rm -f $(modlibexec_LTLIBRARIES)
	@list='$(modlibexec_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
plugin.la: $(plugin_la_OBJECTS) $(plugin_la_DEPENDENCIES) 
	$(plugin_la_LINK) -rpath $(modlibexecdir) $(plugin_la_OBJECTS) $(plugin_la_LIBADD) $(LIBS)
plugina.la: $(plugina_la_OBJECTS) $(plugina_la_DEPENDENCIES) 
	$(plugina_la_LINK) -rpath $(modalibexecdir) $(plugina_la_OBJECTS) $(plugina_la_LIBADD) $(LIBS)
pluginb.la: $(pluginb_la_OBJECTS) $(pluginb_la_DEPENDENCIES) 
	$(pluginb_la_LINK) -rpath $(modblibexecdir) $(pluginb_la_OBJECTS) $(pluginb_la_LIBADD) $(LIBS)
pluginc.la: $(pluginc_la_OBJECTS) $(pluginc_la_DEPENDENCIES) 
	$(pluginc_la_LINK) -rpath $(modclibexecdir) $(pluginc_la_OBJECTS) $(pluginc_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
testasyncworker$(EXEEXT): $(testasyncworker_OBJECTS) $(testasyncworker_DEPENDENCIES) 
	@rm -f testasyncworker$(EXEEXT)
	$(LINK) $(testasyncworker_OBJECTS) $(testasyncworker_LDADD) $(LIBS)
testcommon$(EXEEXT): $(testcommon_OBJECTS) $(testcommon_DEPENDENCIES) 
	@rm -f testcommon$(EXEEXT)
	$(LINK) $(testcommon_OBJECTS) $(testcommon_LDADD) $(LIBS)
testkobjectnotifier$(EXEEXT): $(testkobjectnotifier_OBJECTS) $(testkobjectnotifier_DEPENDENCIES) 
	@rm -f testkobjectnotifier$(EXEEXT)
	$(LINK) $(testkobjectnotifier_OBJECTS) $(testkobjectnotifier_LDADD) $(LIBS)
testobject$(EXEEXT): $(testobject_OBJECTS) $(testobject_DEPENDENCIES) 
	@rm -f testobject$(EXEEXT)
	$(LINK) $(testobject_OBJECTS) $(testobject_LDADD) $(LIBS)
testplugin$(EXEEXT): $(testplugin_OBJECTS) $(testplugin_DEPENDENCIES) 
	@rm -f testplugin$(EXEEXT)
	$(LINK) $(testplugin_OBJECTS) $(testplugin_LDADD) $(LIBS)
testsoundsystem$(EXEEXT): $(testsoundsystem_OBJECTS) $(testsoundsystem_DEPENDENCIES) 
	@rm -f testsoundsystem$(EXEEXT)
	$(LINK) $(testsoundsystem_OBJECTS) $(testsoundsystem_LDADD) $(LIBS)
testsubsystem$(EXEEXT): $(testsubsystem_OBJECTS) $(testsubsystem_DEPENDENCIES) 
	@rm -f testsubsystem$(EXEEXT)
	$(LINK) $(testsubsystem_OBJECTS) $(testsubsystem_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/plugin_la-plugin.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/plugina_la-plugina.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pluginb_la-pluginb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pluginc_la-pluginc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testasyncworker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testcommon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testkobjectnotifier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testobject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testplugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testsoundsystem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testsubsystem.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

plugin_la-plugin.lo: plugin.c
@am__fastdepCC_TRUE@	$(LIBTOOL) --tag=CC $(plugin_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT plugin_la-plugin.lo -MD -MP -MF $(DEPDIR)/plugin_la-plugin.Tpo -c -o plugin_la-plugin.lo `test -f 'plugin.c' || echo '$(srcdir)/'`plugin.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/plugin_la-plugin.Tpo $(DEPDIR)/plugin_la-plugin.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='plugin.c' object='plugin_la-plugin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC $(plugin_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o plugin_la-plugin.lo `test -f 'plugin.c' || echo '$(srcdir)/'`plugin.c

plugina_la-plugina.lo: plugina.c
@am__fastdepCC_TRUE@	$(LIBTOOL) --tag=CC $(plugina_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT plugina_la-plugina.lo -MD -MP -MF $(DEPDIR)/plugina_la-plugina.Tpo -c -o plugina_la-plugina.lo `test -f 'plugina.c' || echo '$(srcdir)/'`plugina.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/plugina_la-plugina.Tpo $(DEPDIR)/plugina_la-plugina.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='plugina.c' object='plugina_la-plugina.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC $(plugina_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o plugina_la-plugina.lo `test -f 'plugina.c' || echo '$(srcdir)/'`plugina.c

pluginb_la-pluginb.lo: pluginb.c
@am__fastdepCC_TRUE@	$(LIBTOOL) --tag=CC $(pluginb_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pluginb_la-pluginb.lo -MD -MP -MF $(DEPDIR)/pluginb_la-pluginb.Tpo -c -o pluginb_la-pluginb.lo `test -f 'pluginb.c' || echo '$(srcdir)/'`pluginb.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/pluginb_la-pluginb.Tpo $(DEPDIR)/pluginb_la-pluginb.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pluginb.c' object='pluginb_la-pluginb.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC $(pluginb_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pluginb_la-pluginb.lo `test -f 'pluginb.c' || echo '$(srcdir)/'`pluginb.c

pluginc_la-pluginc.lo: pluginc.c
@am__fastdepCC_TRUE@	$(LIBTOOL) --tag=CC $(pluginc_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pluginc_la-pluginc.lo -MD -MP -MF $(DEPDIR)/pluginc_la-pluginc.Tpo -c -o pluginc_la-pluginc.lo `test -f 'pluginc.c' || echo '$(srcdir)/'`pluginc.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/pluginc_la-pluginc.Tpo $(DEPDIR)/pluginc_la-pluginc.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pluginc.c' object='pluginc_la-pluginc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC $(pluginc_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pluginc_la-pluginc.lo `test -f 'pluginc.c' || echo '$(srcdir)/'`pluginc.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(modalibexecdir)" "$(DESTDIR)$(modblibexecdir)" "$(DESTDIR)$(modclibexecdir)" "$(DESTDIR)$(modlibexecdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-modalibexecLTLIBRARIES \
	clean-modblibexecLTLIBRARIES clean-modclibexecLTLIBRARIES \
	clean-modlibexecLTLIBRARIES clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-modalibexecLTLIBRARIES \
	install-modblibexecLTLIBRARIES install-modclibexecLTLIBRARIES \
	install-modlibexecLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-modalibexecLTLIBRARIES \
	uninstall-modblibexecLTLIBRARIES \
	uninstall-modclibexecLTLIBRARIES \
	uninstall-modlibexecLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am check-local clean \
	clean-generic clean-libtool clean-modalibexecLTLIBRARIES \
	clean-modblibexecLTLIBRARIES clean-modclibexecLTLIBRARIES \
	clean-modlibexecLTLIBRARIES clean-noinstPROGRAMS ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-modalibexecLTLIBRARIES \
	install-modblibexecLTLIBRARIES install-modclibexecLTLIBRARIES \
	install-modlibexecLTLIBRARIES install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-modalibexecLTLIBRARIES \
	uninstall-modblibexecLTLIBRARIES \
	uninstall-modclibexecLTLIBRARIES \
	uninstall-modlibexecLTLIBRARIES


### testing rules

# test: run all tests in cwd and subdirs
test:	${TEST_PROGS}
	@test -z "${TEST_PROGS}" || ${GTESTER} --verbose ${TEST_PROGS}
	@ for subdir in $(SUBDIRS) . ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done
# test-report: run tests in subdirs and generate report
# perf-report: run tests in subdirs with -m perf and generate report
# full-report: like test-report: with -m perf and -m slow
test-report perf-report full-report:	${TEST_PROGS}
	@test -z "${TEST_PROGS}" || { \
	  case $@ in \
	  test-report) test_options="-k";; \
	  perf-report) test_options="-k -m=perf";; \
	  full-report) test_options="-k -m=perf -m=slow";; \
	  esac ; \
	  if test -z "$$GTESTER_LOGDIR" ; then	\
	    ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \
	  elif test -n "${TEST_PROGS}" ; then \
	    ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \
	  fi ; \
	}
	@ ignore_logdir=true ; \
	  if test -z "$$GTESTER_LOGDIR" ; then \
	    GTESTER_LOGDIR=`mktemp -d "\`pwd\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \
	    ignore_logdir=false ; \
	  fi ; \
	  for subdir in $(SUBDIRS) . ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done ; \
	  $$ignore_logdir || { \
	    echo '<?xml version="1.0"?>' > $@.xml ; \
	    echo '<report-collection>'  >> $@.xml ; \
	    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \
	      sed '1,1s/^<?xml\b[^>?]*?>//' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \
	    done ; \
	    echo >> $@.xml ; \
	    echo '</report-collection>' >> $@.xml ; \
	    rm -rf "$$GTESTER_LOGDIR"/ ; \
	    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \
	  }
.PHONY: test test-report perf-report full-report
# run make test as part of make check
check-local: test
$(testcommon_SOURCES): $(testcommon_VALASOURCES)
	$(VALAC) $(VALAC_ARGS) $^
	touch $@
$(plugin_la_SOURCES): $(plugin_la_VALASOURCES)
	$(VALAC) $(VALAC_ARGS) $^
	touch $@
$(plugina_la_SOURCES): $(plugina_la_VALASOURCES)
	$(VALAC) $(VALAC_ARGS) $^
	touch $@
$(pluginb_la_SOURCES): $(pluginb_la_VALASOURCES)
	$(VALAC) $(VALAC_ARGS) $^
	touch $@
$(pluginc_la_SOURCES): $(pluginc_la_VALASOURCES)
	$(VALAC) $(VALAC_ARGS) $^
	touch $@
$(testplugin_SOURCES): $(testplugin_VALASOURCES)
	$(VALAC) $(VALAC_ARGS) $^
	touch $@
$(testsubsystem_SOURCES): $(testsubsystem_VALASOURCES)
	$(VALAC) $(VALAC_ARGS) $^
	touch $@
$(testobject_SOURCES): $(testobject_VALASOURCES)
	$(VALAC) $(VALAC_ARGS) $^
	touch $@
$(testasyncworker_SOURCES): $(testasyncworker_VALASOURCES)
	$(VALAC) $(VALAC_ARGS) $^
	touch $@
$(testkobjectnotifier_SOURCES): $(testkobjectnotifier_VALASOURCES)
	$(VALAC) $(VALAC_ARGS) $^
	touch $@
$(testsoundsystem_SOURCES): $(testsoundsystem_VALASOURCES)
	$(VALAC) $(VALAC_ARGS) $^
	touch $@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
