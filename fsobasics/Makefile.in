# Makefile.in generated by automake 1.11.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# GLIB - Library of useful C routines



VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(dist_vapi_DATA) $(fsobasicsinclude_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/fsobasics-2.0.pc.in $(top_srcdir)/Makefile.decl \
	async.c asyncworker.c binary.c checksum.c filehandling.c \
	fsobasics.h inotifier.c kernel.c kobjectnotifier.c \
	libfsobasics_la_vala.stamp libinitexit.c logger.c \
	netlinknotifier.c netlinkutils.c object.c overlay.c process.c \
	smartkeyfile.c stringhandling.c syncasync.c threading.c \
	types.c utilities.c
@WANT_DEBUG_TRUE@am__append_1 = --debug -D DEBUG
@WANT_DEBUG_TRUE@am__append_2 = -ggdb -O0
@HAVE_BACKTRACE_TRUE@am__append_3 = -D HAVE_BACKTRACE
subdir = fsobasics
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = fsobasics-2.0.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(vapidir)" \
	"$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(fsobasicsincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libfsobasics_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__objects_1 =
am_libfsobasics_la_OBJECTS = libfsobasics_la-asyncworker.lo \
	libfsobasics_la-binary.lo libfsobasics_la-inotifier.lo \
	libfsobasics_la-kobjectnotifier.lo \
	libfsobasics_la-libinitexit.lo libfsobasics_la-logger.lo \
	libfsobasics_la-netlinknotifier.lo \
	libfsobasics_la-netlinkutils.lo libfsobasics_la-overlay.lo \
	libfsobasics_la-process.lo libfsobasics_la-smartkeyfile.lo \
	libfsobasics_la-syncasync.lo libfsobasics_la-threading.lo \
	libfsobasics_la-types.lo libfsobasics_la-utilities.lo \
	libfsobasics_la-filehandling.lo \
	libfsobasics_la-stringhandling.lo libfsobasics_la-async.lo \
	libfsobasics_la-kernel.lo libfsobasics_la-checksum.lo \
	libfsobasics_la-object.lo libfsobasics_la-gcc_libinitexit.lo \
	$(am__objects_1)
libfsobasics_la_OBJECTS = $(am_libfsobasics_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
libfsobasics_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libfsobasics_la_CFLAGS) $(CFLAGS) $(libfsobasics_la_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD  " $@;
VALACOMPILE = $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS)
LTVALACOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(VALAC) $(AM_VALAFLAGS) \
	$(VALAFLAGS)
AM_V_VALAC = $(am__v_VALAC_@AM_V@)
am__v_VALAC_ = $(am__v_VALAC_@AM_DEFAULT_V@)
am__v_VALAC_0 = @echo "  VALAC " $@;
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libfsobasics_la_SOURCES)
DIST_SOURCES = $(libfsobasics_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(dist_vapi_DATA) $(pkgconfig_DATA)
HEADERS = $(fsobasicsinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FSO_GLIB_CFLAGS = @FSO_GLIB_CFLAGS@
FSO_GLIB_LIBS = @FSO_GLIB_LIBS@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GREP = @GREP@
GSM0710_CFLAGS = @GSM0710_CFLAGS@
GSM0710_LIBS = @GSM0710_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBNL_CFLAGS = @LIBNL_CFLAGS@
LIBNL_LIBS = @LIBNL_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_AGE = @LT_AGE@
LT_CURRENT = @LT_CURRENT@
LT_REVISION = @LT_REVISION@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VALAC = @VALAC@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
GTESTER = gtester
GTESTER_REPORT = gtester-report

# initialize variables for unconditional += appending
EXTRA_DIST = fsobasics-2.0.pc.in $(NULL)
TEST_PROGS = 

# debug flags for vala and gcc
DEBUG_VALAFLAGS = $(am__append_1)
DEBUG_CFLAGS = $(am__append_2)
NULL = 
AM_CFLAGS = \
	-DG_LOG_DOMAIN=\"fsobasics\" \
	-DSYSCONFDIR=\"$(sysconfdir)\" \
	-D_GNU_SOURCE \
	$(NULL)

AM_VALAFLAGS = $(NULL) $(am__append_3)
lib_LTLIBRARIES = libfsobasics.la
libfsobasics_la_SOURCES = \
	asyncworker.vala \
	binary.vala \
	inotifier.vala \
	kobjectnotifier.vala \
	libinitexit.vala \
	logger.vala \
	netlinknotifier.vala \
	netlinkutils.vala \
	overlay.vala \
	process.vala \
	smartkeyfile.vala \
	syncasync.vala \
	threading.vala \
	types.vala \
	utilities.vala \
	filehandling.vala \
	stringhandling.vala \
	async.vala \
	kernel.vala \
	checksum.vala \
	object.vala \
	gcc_libinitexit.c \
	$(NULL)

libfsobasics_la_CFLAGS = \
	$(AM_CFLAGS) \
	$(GLIB_CFLAGS) \
	$(LIBNL_CFLAGS) \
	$(DEBUG_CFLAGS) \
	$(NULL)

libfsobasics_la_VALAFLAGS = \
	$(AM_VALAFLAGS) \
	--basedir $(top_srcdir) \
	--vapidir $(top_srcdir)/vapi \
	--pkg posix \
	--pkg linux \
	--pkg libnl-3.0 \
	--pkg glib-2.0 \
	--pkg gio-2.0 \
	--pkg config \
	--pkg misc \
	-D SYSCONFDIR="$(sysconfdir)" \
	--header fsobasics.h \
	--library fsobasics-2.0

libfsobasics_la_LIBADD = \
	$(GLIB_LIBS) \
	$(LIBNL_LIBS) \
	$(NULL)

libfsobasics_la_LDFLAGS = \
	$(AM_LDFLAGS) \
	-version-info "$(LT_CURRENT)":"$(LT_REVISION)":"$(LT_AGE)" \
	$(NULL)

fsobasicsincludedir = $(includedir)/fsoframework-2.0
fsobasicsinclude_HEADERS = fsobasics.h
vapidir = $(datadir)/vala/vapi
dist_vapi_DATA = \
	fsobasics-2.0.vapi \
	fsobasics-2.0.deps \
	$(NULL)

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = fsobasics-2.0.pc
BUILT_SOURCES = \
	fsobasics.h \
	fsobasics-2.0.vapi \
	$(NULL)

CLEANFILES = 
MAINTAINERCLEANFILES = \
	$(BUILT_SOURCES) \
	$(NULL)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/Makefile.decl $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu fsobasics/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu fsobasics/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.decl:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
fsobasics-2.0.pc: $(top_builddir)/config.status $(srcdir)/fsobasics-2.0.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libfsobasics.la: $(libfsobasics_la_OBJECTS) $(libfsobasics_la_DEPENDENCIES) $(EXTRA_libfsobasics_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libfsobasics_la_LINK) -rpath $(libdir) $(libfsobasics_la_OBJECTS) $(libfsobasics_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-async.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-asyncworker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-binary.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-checksum.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-filehandling.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-gcc_libinitexit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-inotifier.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-kernel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-kobjectnotifier.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-libinitexit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-logger.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-netlinknotifier.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-netlinkutils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-object.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-overlay.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-process.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-smartkeyfile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-stringhandling.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-syncasync.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-threading.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-types.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libfsobasics_la-utilities.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

libfsobasics_la-asyncworker.lo: asyncworker.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-asyncworker.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-asyncworker.Tpo -c -o libfsobasics_la-asyncworker.lo `test -f 'asyncworker.c' || echo '$(srcdir)/'`asyncworker.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-asyncworker.Tpo $(DEPDIR)/libfsobasics_la-asyncworker.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='asyncworker.c' object='libfsobasics_la-asyncworker.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-asyncworker.lo `test -f 'asyncworker.c' || echo '$(srcdir)/'`asyncworker.c

libfsobasics_la-binary.lo: binary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-binary.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-binary.Tpo -c -o libfsobasics_la-binary.lo `test -f 'binary.c' || echo '$(srcdir)/'`binary.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-binary.Tpo $(DEPDIR)/libfsobasics_la-binary.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='binary.c' object='libfsobasics_la-binary.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-binary.lo `test -f 'binary.c' || echo '$(srcdir)/'`binary.c

libfsobasics_la-inotifier.lo: inotifier.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-inotifier.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-inotifier.Tpo -c -o libfsobasics_la-inotifier.lo `test -f 'inotifier.c' || echo '$(srcdir)/'`inotifier.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-inotifier.Tpo $(DEPDIR)/libfsobasics_la-inotifier.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='inotifier.c' object='libfsobasics_la-inotifier.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-inotifier.lo `test -f 'inotifier.c' || echo '$(srcdir)/'`inotifier.c

libfsobasics_la-kobjectnotifier.lo: kobjectnotifier.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-kobjectnotifier.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-kobjectnotifier.Tpo -c -o libfsobasics_la-kobjectnotifier.lo `test -f 'kobjectnotifier.c' || echo '$(srcdir)/'`kobjectnotifier.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-kobjectnotifier.Tpo $(DEPDIR)/libfsobasics_la-kobjectnotifier.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='kobjectnotifier.c' object='libfsobasics_la-kobjectnotifier.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-kobjectnotifier.lo `test -f 'kobjectnotifier.c' || echo '$(srcdir)/'`kobjectnotifier.c

libfsobasics_la-libinitexit.lo: libinitexit.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-libinitexit.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-libinitexit.Tpo -c -o libfsobasics_la-libinitexit.lo `test -f 'libinitexit.c' || echo '$(srcdir)/'`libinitexit.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-libinitexit.Tpo $(DEPDIR)/libfsobasics_la-libinitexit.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='libinitexit.c' object='libfsobasics_la-libinitexit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-libinitexit.lo `test -f 'libinitexit.c' || echo '$(srcdir)/'`libinitexit.c

libfsobasics_la-logger.lo: logger.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-logger.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-logger.Tpo -c -o libfsobasics_la-logger.lo `test -f 'logger.c' || echo '$(srcdir)/'`logger.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-logger.Tpo $(DEPDIR)/libfsobasics_la-logger.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='logger.c' object='libfsobasics_la-logger.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-logger.lo `test -f 'logger.c' || echo '$(srcdir)/'`logger.c

libfsobasics_la-netlinknotifier.lo: netlinknotifier.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-netlinknotifier.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-netlinknotifier.Tpo -c -o libfsobasics_la-netlinknotifier.lo `test -f 'netlinknotifier.c' || echo '$(srcdir)/'`netlinknotifier.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-netlinknotifier.Tpo $(DEPDIR)/libfsobasics_la-netlinknotifier.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='netlinknotifier.c' object='libfsobasics_la-netlinknotifier.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-netlinknotifier.lo `test -f 'netlinknotifier.c' || echo '$(srcdir)/'`netlinknotifier.c

libfsobasics_la-netlinkutils.lo: netlinkutils.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-netlinkutils.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-netlinkutils.Tpo -c -o libfsobasics_la-netlinkutils.lo `test -f 'netlinkutils.c' || echo '$(srcdir)/'`netlinkutils.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-netlinkutils.Tpo $(DEPDIR)/libfsobasics_la-netlinkutils.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='netlinkutils.c' object='libfsobasics_la-netlinkutils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-netlinkutils.lo `test -f 'netlinkutils.c' || echo '$(srcdir)/'`netlinkutils.c

libfsobasics_la-overlay.lo: overlay.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-overlay.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-overlay.Tpo -c -o libfsobasics_la-overlay.lo `test -f 'overlay.c' || echo '$(srcdir)/'`overlay.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-overlay.Tpo $(DEPDIR)/libfsobasics_la-overlay.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='overlay.c' object='libfsobasics_la-overlay.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-overlay.lo `test -f 'overlay.c' || echo '$(srcdir)/'`overlay.c

libfsobasics_la-process.lo: process.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-process.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-process.Tpo -c -o libfsobasics_la-process.lo `test -f 'process.c' || echo '$(srcdir)/'`process.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-process.Tpo $(DEPDIR)/libfsobasics_la-process.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='process.c' object='libfsobasics_la-process.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-process.lo `test -f 'process.c' || echo '$(srcdir)/'`process.c

libfsobasics_la-smartkeyfile.lo: smartkeyfile.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-smartkeyfile.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-smartkeyfile.Tpo -c -o libfsobasics_la-smartkeyfile.lo `test -f 'smartkeyfile.c' || echo '$(srcdir)/'`smartkeyfile.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-smartkeyfile.Tpo $(DEPDIR)/libfsobasics_la-smartkeyfile.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='smartkeyfile.c' object='libfsobasics_la-smartkeyfile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-smartkeyfile.lo `test -f 'smartkeyfile.c' || echo '$(srcdir)/'`smartkeyfile.c

libfsobasics_la-syncasync.lo: syncasync.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-syncasync.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-syncasync.Tpo -c -o libfsobasics_la-syncasync.lo `test -f 'syncasync.c' || echo '$(srcdir)/'`syncasync.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-syncasync.Tpo $(DEPDIR)/libfsobasics_la-syncasync.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='syncasync.c' object='libfsobasics_la-syncasync.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-syncasync.lo `test -f 'syncasync.c' || echo '$(srcdir)/'`syncasync.c

libfsobasics_la-threading.lo: threading.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-threading.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-threading.Tpo -c -o libfsobasics_la-threading.lo `test -f 'threading.c' || echo '$(srcdir)/'`threading.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-threading.Tpo $(DEPDIR)/libfsobasics_la-threading.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='threading.c' object='libfsobasics_la-threading.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-threading.lo `test -f 'threading.c' || echo '$(srcdir)/'`threading.c

libfsobasics_la-types.lo: types.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-types.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-types.Tpo -c -o libfsobasics_la-types.lo `test -f 'types.c' || echo '$(srcdir)/'`types.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-types.Tpo $(DEPDIR)/libfsobasics_la-types.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='types.c' object='libfsobasics_la-types.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-types.lo `test -f 'types.c' || echo '$(srcdir)/'`types.c

libfsobasics_la-utilities.lo: utilities.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-utilities.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-utilities.Tpo -c -o libfsobasics_la-utilities.lo `test -f 'utilities.c' || echo '$(srcdir)/'`utilities.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-utilities.Tpo $(DEPDIR)/libfsobasics_la-utilities.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='utilities.c' object='libfsobasics_la-utilities.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-utilities.lo `test -f 'utilities.c' || echo '$(srcdir)/'`utilities.c

libfsobasics_la-filehandling.lo: filehandling.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-filehandling.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-filehandling.Tpo -c -o libfsobasics_la-filehandling.lo `test -f 'filehandling.c' || echo '$(srcdir)/'`filehandling.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-filehandling.Tpo $(DEPDIR)/libfsobasics_la-filehandling.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='filehandling.c' object='libfsobasics_la-filehandling.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-filehandling.lo `test -f 'filehandling.c' || echo '$(srcdir)/'`filehandling.c

libfsobasics_la-stringhandling.lo: stringhandling.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-stringhandling.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-stringhandling.Tpo -c -o libfsobasics_la-stringhandling.lo `test -f 'stringhandling.c' || echo '$(srcdir)/'`stringhandling.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-stringhandling.Tpo $(DEPDIR)/libfsobasics_la-stringhandling.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='stringhandling.c' object='libfsobasics_la-stringhandling.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-stringhandling.lo `test -f 'stringhandling.c' || echo '$(srcdir)/'`stringhandling.c

libfsobasics_la-async.lo: async.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-async.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-async.Tpo -c -o libfsobasics_la-async.lo `test -f 'async.c' || echo '$(srcdir)/'`async.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-async.Tpo $(DEPDIR)/libfsobasics_la-async.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='async.c' object='libfsobasics_la-async.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-async.lo `test -f 'async.c' || echo '$(srcdir)/'`async.c

libfsobasics_la-kernel.lo: kernel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-kernel.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-kernel.Tpo -c -o libfsobasics_la-kernel.lo `test -f 'kernel.c' || echo '$(srcdir)/'`kernel.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-kernel.Tpo $(DEPDIR)/libfsobasics_la-kernel.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='kernel.c' object='libfsobasics_la-kernel.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-kernel.lo `test -f 'kernel.c' || echo '$(srcdir)/'`kernel.c

libfsobasics_la-checksum.lo: checksum.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-checksum.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-checksum.Tpo -c -o libfsobasics_la-checksum.lo `test -f 'checksum.c' || echo '$(srcdir)/'`checksum.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-checksum.Tpo $(DEPDIR)/libfsobasics_la-checksum.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='checksum.c' object='libfsobasics_la-checksum.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-checksum.lo `test -f 'checksum.c' || echo '$(srcdir)/'`checksum.c

libfsobasics_la-object.lo: object.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-object.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-object.Tpo -c -o libfsobasics_la-object.lo `test -f 'object.c' || echo '$(srcdir)/'`object.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-object.Tpo $(DEPDIR)/libfsobasics_la-object.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='object.c' object='libfsobasics_la-object.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-object.lo `test -f 'object.c' || echo '$(srcdir)/'`object.c

libfsobasics_la-gcc_libinitexit.lo: gcc_libinitexit.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -MT libfsobasics_la-gcc_libinitexit.lo -MD -MP -MF $(DEPDIR)/libfsobasics_la-gcc_libinitexit.Tpo -c -o libfsobasics_la-gcc_libinitexit.lo `test -f 'gcc_libinitexit.c' || echo '$(srcdir)/'`gcc_libinitexit.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libfsobasics_la-gcc_libinitexit.Tpo $(DEPDIR)/libfsobasics_la-gcc_libinitexit.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='gcc_libinitexit.c' object='libfsobasics_la-gcc_libinitexit.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfsobasics_la_CFLAGS) $(CFLAGS) -c -o libfsobasics_la-gcc_libinitexit.lo `test -f 'gcc_libinitexit.c' || echo '$(srcdir)/'`gcc_libinitexit.c
$(srcdir)/asyncworker.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/binary.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/inotifier.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/kobjectnotifier.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/libinitexit.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/logger.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/netlinknotifier.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/netlinkutils.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/overlay.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/process.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/smartkeyfile.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/syncasync.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/threading.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/types.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/utilities.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/filehandling.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/stringhandling.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/async.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/kernel.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/checksum.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/object.c: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/fsobasics.h: $(srcdir)/libfsobasics_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libfsobasics_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libfsobasics_la_vala.stamp; \
	fi
$(srcdir)/libfsobasics_la_vala.stamp: asyncworker.vala binary.vala inotifier.vala kobjectnotifier.vala libinitexit.vala logger.vala netlinknotifier.vala netlinkutils.vala overlay.vala process.vala smartkeyfile.vala syncasync.vala threading.vala types.vala utilities.vala filehandling.vala stringhandling.vala async.vala kernel.vala checksum.vala object.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(libfsobasics_la_VALAFLAGS) $(VALAFLAGS) -C asyncworker.vala binary.vala inotifier.vala kobjectnotifier.vala libinitexit.vala logger.vala netlinknotifier.vala netlinkutils.vala overlay.vala process.vala smartkeyfile.vala syncasync.vala threading.vala types.vala utilities.vala filehandling.vala stringhandling.vala async.vala kernel.vala checksum.vala object.vala
	$(AM_V_at)mv -f $@-t $@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-dist_vapiDATA: $(dist_vapi_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_vapi_DATA)'; test -n "$(vapidir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vapidir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vapidir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vapidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vapidir)" || exit $$?; \
	done

uninstall-dist_vapiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_vapi_DATA)'; test -n "$(vapidir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vapidir)'; $(am__uninstall_files_from_dir)
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-fsobasicsincludeHEADERS: $(fsobasicsinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(fsobasicsinclude_HEADERS)'; test -n "$(fsobasicsincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(fsobasicsincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(fsobasicsincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(fsobasicsincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(fsobasicsincludedir)" || exit $$?; \
	done

uninstall-fsobasicsincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(fsobasicsinclude_HEADERS)'; test -n "$(fsobasicsincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(fsobasicsincludedir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(vapidir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(fsobasicsincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f async.c
	-rm -f asyncworker.c
	-rm -f binary.c
	-rm -f checksum.c
	-rm -f filehandling.c
	-rm -f fsobasics.h
	-rm -f inotifier.c
	-rm -f kernel.c
	-rm -f kobjectnotifier.c
	-rm -f libfsobasics_la_vala.stamp
	-rm -f libinitexit.c
	-rm -f logger.c
	-rm -f netlinknotifier.c
	-rm -f netlinkutils.c
	-rm -f object.c
	-rm -f overlay.c
	-rm -f process.c
	-rm -f smartkeyfile.c
	-rm -f stringhandling.c
	-rm -f syncasync.c
	-rm -f threading.c
	-rm -f types.c
	-rm -f utilities.c
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dist_vapiDATA install-fsobasicsincludeHEADERS \
	install-pkgconfigDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-dist_vapiDATA \
	uninstall-fsobasicsincludeHEADERS uninstall-libLTLIBRARIES \
	uninstall-pkgconfigDATA

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am check-local clean \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dist_vapiDATA install-dvi \
	install-dvi-am install-exec install-exec-am \
	install-fsobasicsincludeHEADERS install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am install-pkgconfigDATA \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-dist_vapiDATA \
	uninstall-fsobasicsincludeHEADERS uninstall-libLTLIBRARIES \
	uninstall-pkgconfigDATA


### testing rules

# test: run all tests in cwd and subdirs
test:	${TEST_PROGS}
	@test -z "${TEST_PROGS}" || ${GTESTER} --verbose ${TEST_PROGS}
	@ for subdir in $(SUBDIRS) . ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done
# test-report: run tests in subdirs and generate report
# perf-report: run tests in subdirs with -m perf and generate report
# full-report: like test-report: with -m perf and -m slow
test-report perf-report full-report:	${TEST_PROGS}
	@test -z "${TEST_PROGS}" || { \
	  case $@ in \
	  test-report) test_options="-k";; \
	  perf-report) test_options="-k -m=perf";; \
	  full-report) test_options="-k -m=perf -m=slow";; \
	  esac ; \
	  if test -z "$$GTESTER_LOGDIR" ; then	\
	    ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \
	  elif test -n "${TEST_PROGS}" ; then \
	    ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \
	  fi ; \
	}
	@ ignore_logdir=true ; \
	  if test -z "$$GTESTER_LOGDIR" ; then \
	    GTESTER_LOGDIR=`mktemp -d "\`pwd\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \
	    ignore_logdir=false ; \
	  fi ; \
	  for subdir in $(SUBDIRS) . ; do \
	    test "$$subdir" = "." -o "$$subdir" = "po" || \
	    ( cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $@ ) || exit $? ; \
	  done ; \
	  $$ignore_logdir || { \
	    echo '<?xml version="1.0"?>' > $@.xml ; \
	    echo '<report-collection>'  >> $@.xml ; \
	    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \
	      sed '1,1s/^<?xml\b[^>?]*?>//' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \
	    done ; \
	    echo >> $@.xml ; \
	    echo '</report-collection>' >> $@.xml ; \
	    rm -rf "$$GTESTER_LOGDIR"/ ; \
	    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \
	  }
.PHONY: test test-report perf-report full-report
# run make test as part of make check
check-local: test
	$(DEBUG_VALAFLAGS) \
	$(NULL)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
